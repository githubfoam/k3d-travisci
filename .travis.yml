---
sudo: required
dist: bionic
notifications:
  slack:
    on_failure: always

fleet_k3d_singlemaster_tasks : &fleet_k3d_singlemaster_tasks
      script:
        - sudo sh -c "curl -sSL https://raw.githubusercontent.com/rancher/k3d/main/install.sh | bash" #grab the latest release
        - k3d version
        - k3d --help
        - docker ps
        - k3d cluster list
        - sudo k3d cluster create demo --servers 3 --agents 3  
        - sudo k3d cluster list  
        - sudo k3d node list  
        - sudo kubectl get nodes  
        - sudo k3d cluster delete demo   

fleet_script_tasks : &fleet_script_tasks
      script:
        - python --version

fleet_install_tasks : &fleet_install_tasks
      install:
        - pip install -r requirements.txt

matrix:
  fast_finish: true
  include:

    - name: "k3d single master  Python 3.7 on bionic amd64"
      os: linux
      dist: bionic
      arch: amd64
      addons:
        snaps:
          - name: multipass
            confinement: classic # or devmode
            channel: latest/stable # will be passed to --channel flag
          - name: kubectl
            confinement: classic # or devmode
            channel: latest/stable # will be passed to --channel flag
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
      <<: *fleet_install_tasks
      <<: *fleet_script_tasks
      <<: *fleet_k3d_singlemaster_tasks
      after_success:
        - deactivate

    - name: "k3d v3.0.1 single master  Python 3.7 on bionic amd64"
      os: linux
      dist: bionic
      arch: amd64
      addons:
        snaps:
          - name: multipass
            confinement: classic # or devmode
            channel: latest/stable # will be passed to --channel flag
          - name: kubectl
            confinement: classic # or devmode
            channel: latest/stable # will be passed to --channel flag
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - python --version
        - pip install -r requirements.txt                
      script:
        - sudo sh -c "curl -sSL https://raw.githubusercontent.com/rancher/k3d/main/install.sh | TAG=v3.0.1 bash" #grab the latest release
        - k3d version
        - k3d --help  
        - docker ps
        - k3d cluster list  
        - sudo k3d cluster create demo --servers 3 --agents 3      
        - sudo k3d cluster list  
        - sudo k3d node list  
        - sudo kubectl get nodes  
        - sudo k3d cluster delete demo                      
      after_success:
        - deactivate