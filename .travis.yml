---
sudo: required
dist: bionic
notifications:
  slack:
    on_failure: always
# fleet_k3d_singlemaster_tasks : &fleet_k3d_singlemaster_tasks
#       script:
#         - sudo sh -c "curl -s https://raw.githubusercontent.com/rancher/k3d/master/install.sh | bash" #grab the latest release
#         - k3d version
#         - k3d check-tools #Check if docker is running
#         - sudo k3d --timestamp --verbose  create cluster --wait 360 --name demo --api-port localhost:6444 --publish 8080:80 --server-arg --tls-san="127.0.0.1"  --workers 3 #Create a single- or multi-node k3s cluster in docker containers
#         - docker ps
#         - k3d list clusters
#         - export KUBECONFIG="$(sudo k3d get-kubeconfig --name='demo')"
#         - cat $KUBECONFIG
#         - sudo kubectl get nodes
#         - sudo kubectl cluster-info
fleet_script_tasks : &fleet_script_tasks
      script:
        - python --version
fleet_install_tasks : &fleet_install_tasks
      install:
        - pip install -r requirements.txt
matrix:
  fast_finish: true
  include:

    - name: "k3d single master Python 3.7 on bionic s390x" #No prebuilt binary for linux-s390x
      os: linux
      arch: s390x
      dist: bionic
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
      <<: *fleet_install_tasks
      <<: *fleet_script_tasks
      # <<: *fleet_k3d_singlemaster_tasks
      after_success:
        - deactivate


    - name: "k3d single master Python 3.7 on xenial s390x" #No prebuilt binary for linux-s390x
      os: linux
      arch: s390x
      dist: xenial
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
      <<: *fleet_install_tasks
      <<: *fleet_script_tasks
      # <<: *fleet_k3d_singlemaster_tasks
      after_success:
        - deactivate
